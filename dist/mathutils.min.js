function width_helper(t){return Math.round((t+1)*(width-1)/2)}function height_helper(t){return Math.round((t+1)*(height-1)/2)}function getCameraMatrix(t,n){let e=math.subtract(t,n),r=t,o=normalize(e),l=math.cross([0,1,0],o);l=math.divide(l,math.norm(l));let i=math.cross(o,l);i=normalize(i);const h=t=>[t[0],t[1],t[2],-dotFn(r,t)];return[h(l),h(i),h(o),[0,0,0,1]]}function getTranslationMatrix(t,n,e){return[[1,0,0,t],[0,1,0,n],[0,0,1,e],[0,0,0,1]]}function getScaleMatrix(t,n,e){return[[t,0,0,0],[0,n,0,0],[0,0,e,0],[0,0,0,1]]}function getRotationMatrix(t,n,e){const r=Math.PI/180*t,o=Math.PI/180*n,l=Math.PI/180*e,[i,h,u,a,c,f]=[Math.cos(l),Math.sin(l),Math.cos(o),Math.sin(o),Math.cos(r),Math.sin(r)];return[[i*u,i*a*f-h*c,i*a*c+h*f,0],[h*u,h*a*f+i*c,h*a*c-i*f,0],[-a,u*f,u*c,0],[0,0,0,1]]}function normFn(t){let n=0;for(let e=0;e<t.length;e++)n+=t[e]*t[e];return Math.sqrt(n)}function dVMultFn(t,n){let e=n.slice();for(let n=0;n<e.length;n++)e[n]*=t;return e}function VeMultFn(t,n){let e=t.slice();for(let t=0;t<e.length;t++)e[t]*=n[t];return e}function dotFn(t,n){let e=0;for(let r=0;r<t.length;r++)e+=t[r]*n[r];return e}function normalize(t){let n=0,e=t.slice();for(let e=0;e<t.length;e++)n+=t[e]*t[e];n=math.sqrt(n);for(let t=0;t<e.length;t++)e[t]/=n;return e}function squeezeFn(t){return t.map(t=>t[0])}function vecAdd(t,...n){let e=t.slice();for(let r=0;r<n.length;r++)for(let o=0;o<t.length;o++)e[o]+=n[r][o];return e}function v4_2_v3(t){let n=t.slice(0,3);for(let e=0;e<3;e++)n[e]/=t[3];return n}